{
    "openapi": "3.0.0",
    "info": {
        "description": "API for tracking and managing shisha (hookah) sessions",
        "title": "Shisha Log API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/toof-jp/shisha-log"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Change password for the authenticated user",
                "tags": [
                    "auth"
                ],
                "summary": "Change password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Password change data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized or incorrect current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and receive a JWT token",
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Login request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/models.User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout user and revoke refresh token",
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Get a new access token using refresh token from cookie",
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/models.User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No refresh token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account with user ID and password",
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Registration request",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/models.User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/request-password-reset": {
            "post": {
                "description": "Request a password reset token for a user",
                "tags": [
                    "auth"
                ],
                "summary": "Request password reset",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Password reset request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Reset token generated (token would be sent via secure channel in production)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "reset_token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Reset user password using a reset token",
                "tags": [
                    "auth"
                ],
                "summary": "Reset password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "new_password": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Password reset data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/creators/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get creator statistics for the authenticated user",
                "tags": [
                    "statistics"
                ],
                "summary": "Get creator statistics",
                "responses": {
                    "200": {
                        "description": "Creator statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.CreatorStats"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get creator statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/flavors/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get flavor usage statistics for the authenticated user",
                "tags": [
                    "statistics"
                ],
                "summary": "Get flavor statistics",
                "responses": {
                    "200": {
                        "description": "Flavor statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.FlavorStats"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get flavor statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get order statistics for the authenticated user",
                "tags": [
                    "statistics"
                ],
                "summary": "Get order statistics",
                "responses": {
                    "200": {
                        "description": "Order statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.OrderStats"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get order statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get paginated list of sessions for the authenticated user",
                "tags": [
                    "sessions"
                ],
                "summary": "Get user's sessions",
                "parameters": [
                    {
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "description": "Number of items to skip",
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated sessions list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "type": "integer"
                                        },
                                        "sessions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/models.SessionWithFlavors"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new shisha session for the authenticated user",
                "tags": [
                    "sessions"
                ],
                "summary": "Create a new session",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/models.CreateSessionRequest"
                            }
                        }
                    },
                    "description": "Session data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created session with flavors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SessionWithFlavors"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/by-date": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all sessions for a specific date",
                "tags": [
                    "sessions"
                ],
                "summary": "Get sessions by date",
                "parameters": [
                    {
                        "description": "Date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Timezone (default UTC)",
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sessions for the specified date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "date": {
                                            "type": "string"
                                        },
                                        "sessions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/models.SessionWithFlavors"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/calendar": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get session counts for each day in a specific month",
                "tags": [
                    "sessions"
                ],
                "summary": "Get calendar data",
                "parameters": [
                    {
                        "description": "Year",
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Month (1-12)",
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Timezone (default UTC)",
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Map of date strings to session counts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get calendar data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a specific session by its ID",
                "tags": [
                    "sessions"
                ],
                "summary": "Get a session by ID",
                "parameters": [
                    {
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session details with flavors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SessionWithFlavors"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing session",
                "tags": [
                    "sessions"
                ],
                "summary": "Update a session",
                "parameters": [
                    {
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/models.UpdateSessionRequest"
                            }
                        }
                    },
                    "description": "Updated session data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SessionWithFlavors"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a session by ID",
                "tags": [
                    "sessions"
                ],
                "summary": "Delete a session",
                "parameters": [
                    {
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stores/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get store visit statistics for the authenticated user",
                "tags": [
                    "statistics"
                ],
                "summary": "Get store statistics",
                "responses": {
                    "200": {
                        "description": "Store statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.StoreStats"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get store statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the current authenticated user's information",
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "User information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "//localhost:8080/v1"
        }
    ],
    "components": {
        "securitySchemes": {
            "Bearer": {
                "description": "Type \"Bearer\" followed by a space and JWT token.",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "models.CreateFlavorRequest": {
                "type": "object",
                "properties": {
                    "brand": {
                        "type": "string"
                    },
                    "flavor_name": {
                        "type": "string"
                    }
                }
            },
            "models.CreateSessionRequest": {
                "type": "object",
                "required": [
                    "session_date"
                ],
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.CreateFlavorRequest"
                        }
                    },
                    "mix_name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "order_details": {
                        "type": "string"
                    },
                    "session_date": {
                        "type": "string"
                    },
                    "store_name": {
                        "type": "string"
                    }
                }
            },
            "models.CreatorCount": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "creator": {
                        "type": "string"
                    }
                }
            },
            "models.CreatorStats": {
                "type": "object",
                "properties": {
                    "creators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.CreatorCount"
                        }
                    }
                }
            },
            "models.FlavorCount": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "flavor_name": {
                        "type": "string"
                    }
                }
            },
            "models.FlavorStats": {
                "type": "object",
                "properties": {
                    "all_flavors": {
                        "description": "All flavors",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.FlavorCount"
                        }
                    },
                    "main_flavors": {
                        "description": "First flavors only",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.FlavorCount"
                        }
                    }
                }
            },
            "models.OrderCount": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "order_details": {
                        "type": "string"
                    }
                }
            },
            "models.OrderStats": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.OrderCount"
                        }
                    }
                }
            },
            "models.SessionFlavor": {
                "type": "object",
                "properties": {
                    "brand": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "flavor_name": {
                        "type": "string"
                    },
                    "flavor_order": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    }
                }
            },
            "models.SessionWithFlavors": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.SessionFlavor"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "mix_name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "order_details": {
                        "type": "string"
                    },
                    "session_date": {
                        "type": "string"
                    },
                    "store_name": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                }
            },
            "models.StoreCount": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "store_name": {
                        "type": "string"
                    }
                }
            },
            "models.StoreStats": {
                "type": "object",
                "properties": {
                    "stores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.StoreCount"
                        }
                    }
                }
            },
            "models.UpdateSessionRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.CreateFlavorRequest"
                        }
                    },
                    "mix_name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "order_details": {
                        "type": "string"
                    },
                    "session_date": {
                        "type": "string"
                    },
                    "store_name": {
                        "type": "string"
                    }
                }
            },
            "models.User": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                }
            }
        }
    }
}